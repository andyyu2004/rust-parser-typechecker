{ let x = 5 in x; 5 }
3
2
{ let x = 5 in x; 5 }
{ let x = 5 in x; 67 }
{ let x = 5 in x; false }
{ let x = 5 in x; 67 }
3
123
{ let x = 5 in x; false }
{ let x = 5 in x; false
{ let x = 5 in x; fals
{ let x = 5 in x; fals }
{ let x = 5 in x fals }
2 +
2 + 3
1
2
3
4
1 +
let x : Bool = 5 in x
4
4 +
let x : Bool = 5 in x
{ 1;2;3;4;5; }
let x: Bool = { 1;2;3;4;5; }
let x: Bool = { 1;2;3;4;5; } in 5
let x: Bool = { 1;2;3;4;  5; } in 5
let x: Bool = { 1;2;3;4+;  5; } in 5
let x: Bool = { 1;2;3;4+ ;  5; } in 5
{ let x = 5 in let y = 5 in x
{ let x = 5 in let y = 5 in x }
{ let x = 5 in let y = 5 in x 
let x = 5;
let x = 5
{ let x = 5; x }
{ let x = 5; let y = 5; x + y }
{ let x = 5; let y = false; y }
{ let f = fn x => x; f }
{ let f = fn x => x; f(4) }
{ let f = fn x => x; f(4); f(false) }
{ let f = fn x => x; f(4) }
{ let f = fn x => x; f(false) }
ls
{ let f = fn x => x; f(false) }
{ let f = fn x => x; f(false); f(true) }
{ let f = fn x => x; f(false); f(5) }
{ let f = fn x => x; f(false); }
{ let f = fn x => x; f(false) }
{ let f = fn x => x; f(false); f(5) }
{ let f = fn x => x; f }
{ let f = fn x => x; f(5) }
{ let f = fn x => x; f(4) }
{ let f: fn(Int) -> Int  = fn x => x; f(4) }
{ let f: fn(Int) -> Int  = fn x => x; f(false) }
{ let f: fn(Int) -> Int  = fn x => x; f(4) }
{ let f: fn(Int) -> Int  = fn x => x; f(4); f(false) }
{ let f  = fn x => x; f(4); f(false) }
{ let f  = fn x => x; f(4); f(false); f(4) }
(5)
(fn x => x)
(fn x => x)(4)
(fn x => x)
{ let f  = fn x => x; f(4); f(false); f(4) }
{ let f  = fn x => x; f(4); f(false); f(4); f(false) }
1
2
false
let x : false = 4;
let x: false;
let x: Bool;
let x: Bool = false;
let x: Bool = false
let x: Bool = 5
fn x : Int => x
let x: Bool = 5
fn x : Int => 5
fn x : Int => false
1
(1)
(1, 4)
(1, 2)
(1, 2, 111)
(1, 2, false)
(1, 5, false)
(1, 5, fn x => x)
fn x => x
fn (x, y)=> x
fn (x, y) => x
fn x => fn y => fn z => (x, y, z)
fn x => fn y => (x, y)
fn (x, y) => fn x => y
fn f => fn x => f(f(x))
fn f => fn x => f(f(f(f(f(x)))))
(1, false)
fn x: Int => x
fn x: Int => false
fn x => fn y => (x, y)
fn f => fn x => f(f(f(f(f(x)))))
